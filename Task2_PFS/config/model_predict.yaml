# paths:
path_to_data: '/mnt/faststorage/jintao/HNSCC/hecktor2021_test/resampled/'  # directory with test images
path_to_save_dir: '/mnt/faststorage/jintao/HNSCC/hecktor2021_test/predictions/'  # predictions will be saved here

path_to_weights:  # path or paths to weights. If multiple paths provided, an ensemble of models will be used
  - '/home/sysgen/gitlab/HNSCC-ct-pet-tumor-segmentation/Task2_PFS/results/model/weights/f0_best_model_weights.pt'
  - '/home/sysgen/gitlab/HNSCC-ct-pet-tumor-segmentation/Task2_PFS/results/model/weights/f1_best_model_weights.pt'
  - '/home/sysgen/gitlab/HNSCC-ct-pet-tumor-segmentation/Task2_PFS/results/model/weights/f2_best_model_weights.pt'
  - '/home/sysgen/gitlab/HNSCC-ct-pet-tumor-segmentation/Task2_PFS/results/model/weights/f3_best_model_weights.pt'
  - '/home/sysgen/gitlab/HNSCC-ct-pet-tumor-segmentation/Task2_PFS/results/model/weights/f4_best_model_weights.pt'

# output:
probs: false  # if `true`, the sigmoid output will be saved. Otherwise, 0.5-threshold will be applied to get binary labels

# train settings:
num_workers: 8  # for example, use a number of CPU cores

n_cls: 1  # number of classes to predict (background and tumor)
in_channels: 2  # number of input modalities
n_filters: 24  # number of filters after the input (24 was used in the paper)
reduction: 2  # parameter controls the size of the bottleneck in SENorm layers
